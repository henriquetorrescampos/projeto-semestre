-- DDL para PostgreSQL
-- Limpa as tabelas existentes (necessário para o CREATE OR REPLACE)
DROP TABLE IF EXISTS rating CASCADE;
DROP TABLE IF EXISTS characteristic CASCADE;
DROP TABLE IF EXISTS evaluation CASCADE;
DROP TABLE IF EXISTS evaluated CASCADE;
DROP TABLE IF EXISTS evaluator CASCADE;

-- Criação da tabela evaluator
CREATE TABLE evaluator (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP
);

-- Criação da tabela evaluated
CREATE TABLE evaluated (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    feedback TEXT,
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    evaluator_id BIGINT NOT NULL, -- Chave estrangeira para evaluator
    CONSTRAINT fk_evaluated_evaluator FOREIGN KEY (evaluator_id) REFERENCES evaluator (id)
);

-- Criação da tabela evaluation
-- O tipo de gestor deve ser armazenado como VARCHAR para o Enum
CREATE TABLE evaluation (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    manager_type VARCHAR(255), -- Para ManagerType enum
    evaluated_id BIGINT NOT NULL, -- Chave estrangeira para evaluated
    evaluator_id BIGINT NOT NULL, -- Chave estrangeira para evaluator
    CONSTRAINT fk_evaluation_evaluated FOREIGN KEY (evaluated_id) REFERENCES evaluated (id),
    CONSTRAINT fk_evaluation_evaluator FOREIGN KEY (evaluator_id) REFERENCES evaluator (id)
);

-- Criação da tabela characteristic
CREATE TABLE characteristic (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    skill_category VARCHAR(255), -- Categoria da habilidade
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    evaluation_id BIGINT NOT NULL, -- Chave estrangeira para evaluation
    CONSTRAINT fk_characteristic_evaluation FOREIGN KEY (evaluation_id) REFERENCES evaluation (id)
);

-- Criação da tabela rating
CREATE TABLE rating (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    score INTEGER NOT NULL,
    comment TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    characteristic_id BIGINT NOT NULL, -- Chave estrangeira para characteristic
    evaluator_id BIGINT NOT NULL, -- Chave estrangeira para evaluator (quem deu a nota)
    evaluation_id BIGINT NOT NULL, -- Chave estrangeira para evaluation (avaliação principal)
    CONSTRAINT fk_rating_characteristic FOREIGN KEY (characteristic_id) REFERENCES characteristic (id),
    CONSTRAINT fk_rating_evaluator FOREIGN KEY (evaluator_id) REFERENCES evaluator (id),
    CONSTRAINT fk_rating_evaluation FOREIGN KEY (evaluation_id) REFERENCES evaluation (id)
);