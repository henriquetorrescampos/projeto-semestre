CREATE TABLE IF NOT EXISTS evaluator (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS evaluated (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    feedback TEXT,
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    evaluator_id BIGINT NOT NULL,
    CONSTRAINT fk_evaluated_evaluator FOREIGN KEY (evaluator_id) REFERENCES evaluator (id)
);

CREATE TABLE IF NOT EXISTS evaluation (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    manager_type VARCHAR(255),
    evaluated_id BIGINT NOT NULL,
    evaluator_id BIGINT NOT NULL,
    CONSTRAINT fk_evaluation_evaluated FOREIGN KEY (evaluated_id) REFERENCES evaluated (id),
    CONSTRAINT fk_evaluation_evaluator FOREIGN KEY (evaluator_id) REFERENCES evaluator (id)
);

CREATE TABLE IF NOT EXISTS characteristic (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    skill_category VARCHAR(255),
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    evaluation_id BIGINT NOT NULL,
    CONSTRAINT fk_characteristic_evaluation FOREIGN KEY (evaluation_id) REFERENCES evaluation (id)
);

CREATE TABLE IF NOT EXISTS rating (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    score INTEGER NOT NULL,
    comment TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP,
    characteristic_id BIGINT NOT NULL,
    evaluator_id BIGINT NOT NULL,
    evaluation_id BIGINT NOT NULL,
    CONSTRAINT fk_rating_characteristic FOREIGN KEY (characteristic_id) REFERENCES characteristic (id),
    CONSTRAINT fk_rating_evaluator FOREIGN KEY (evaluator_id) REFERENCES evaluator (id),
    CONSTRAINT fk_rating_evaluation FOREIGN KEY (evaluation_id) REFERENCES evaluation (id)
);